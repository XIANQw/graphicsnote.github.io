{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u56fe\u5f62\u5b66\u7b14\u8bb0 \u5c06\u4e4b\u524d\u7684\u56fe\u5f62\u5b66\u7b14\u8bb0\u5148\u642c\u79fb\u5230github pages\u4e0a\u597d\u4e86, \u628a\u8bb0\u5f55\u7684\u4e60\u60ef\u575a\u6301\u4e0b\u53bb, \u5b9a\u671f\u68b3\u7406~","title":"\u4e3b\u9875"},{"location":"#_1","text":"\u5c06\u4e4b\u524d\u7684\u56fe\u5f62\u5b66\u7b14\u8bb0\u5148\u642c\u79fb\u5230github pages\u4e0a\u597d\u4e86, \u628a\u8bb0\u5f55\u7684\u4e60\u60ef\u575a\u6301\u4e0b\u53bb, \u5b9a\u671f\u68b3\u7406~","title":"\u56fe\u5f62\u5b66\u7b14\u8bb0"},{"location":"NormalMap/","text":"\u6cd5\u7ebf\u8d34\u56fe \u6cd5\u7ebf\u8d34\u56fe\u8868\u793a\u7684\u662f\u5207\u7ebf\u7a7a\u95f4\u4e0b\u7684\u6cd5\u5411\u91cf, \u4efb\u4f55\u671d\u5411\u7684\u5e73\u9762\u90fd\u53ef\u4ee5\u9002\u7528\u540c\u4e00\u5957\u6cd5\u7ebf\u8d34\u56fe. \u4f7f\u7528 \u9876\u70b9\u6570\u636e \u9876\u70b9\u6570\u636e\u9664\u4e86 pos , texcoord , normal \u5916\u8fd8\u9700 Tangent \u6216 Bitangent . VS vs\u4e2d\u5efa\u7acbTBN\u77e9\u9635, \u7528\u4e8e\u5c06\u5207\u7ebf\u7a7a\u95f4\u7684\u6cd5\u7ebf\u8f6c\u5230\u4e16\u754c\u7a7a\u95f4\u4fbf\u4e8e\u540e\u7eed\u5149\u7167\u8ba1\u7b97 // \u5c06\u5207\u7ebf\u4ece\u6a21\u578b\u7a7a\u95f4\u8f6c\u5230\u4e16\u754c\u7a7a\u95f4 half4 tangentWorld = half4(UnityObjectToWorldDir(v.tangent.xyz), v.tangent.w); half3x3 tangentToWorld = CreateTangentToWorldPerVertex(normalWorld, tangentWorld.xyz, tangentWorld.w); // Unity\u6784\u5efaTBN\u77e9\u9635\u7684\u51fd\u6570 half3x3 CreateTangentToWorldPerVertex(half3 normal, half3 tangent, half tangentSign) { // For odd-negative scale transforms we need to flip the sign half sign = tangentSign * unity_WorldTransformParams.w; half3 binormal = cross(normal, tangent) * sign; return half3x3(tangent, binormal, normal); } Fragment half3 normalTangent = UnpackScaleNormal(tex2D (_BumpMap, texcoords.xy), _BumpScale); UnpackNormal \u91c7\u6837\u51fa\u6765\u7684\u5207\u7ebf\u7a7a\u95f4\u6cd5\u5411\u91cf, \u5c06 [0, 1] \u7a7a\u95f4\u8f6c\u6362\u56de [-1, 1] , DXT5nm \u538b\u7f29\u7684\u6cd5\u7ebf\u8d34\u56fe\u53ea\u4f1a\u5b58\u50a8 xy \u503c\u6240\u4ee5\u9700\u8981\u7b97\u51fa z // Unpack normal as DXT5nm (1, y, 1, x) or BC5 (x, y, 0, 1) // Note neutral texture like \"bump\" is (0, 0, 1, 1) to work with both plain RGB normal and DXT5nm/BC5 fixed3 UnpackNormalmapRGorAG(fixed4 packednormal) { // This do the trick packednormal.x *= packednormal.w; fixed3 normal; normal.xy = packednormal.xy * 2 - 1; normal.z = sqrt(1 - saturate(dot(normal.xy, normal.xy))); return normal; } inline fixed3 UnpackNormal(fixed4 packednormal) { #if defined(UNITY_NO_DXT5nm) return packednormal.xyz * 2 - 1; #else return UnpackNormalmapRGorAG(packednormal); #endif } \u6700\u540e\u5c06 normalTangent \u8f6c\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u518d\u5f52\u4e00\u5316\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86 half3 normalWorld = normalize(mul(normalTangent, tangentToWorld)); \u8865\u5145 odd-negative scaling : \u5947\u6570\u8f74\u8d1f\u7f29\u653e, xyz\u4e2d\u67091\u62163\u4e2a\u8f74\u7684\u7f29\u653e\u503c\u4e3a\u8d1f. \u5177\u6709 odd-negative scaling \u548c\u6ca1\u6709\u7684\u7269\u4f53\u6e32\u67d3\u72b6\u6001\u4e0d\u540c, \u56e0\u6b64\u4e5f\u4e0d\u80fd\u52a8\u6001\u5408\u6279\\ \u5728Unity\u4e2d vertex.tangent.w = 1 \u6216 -1 \u4e4b\u6240\u4ee5\u52a0\u4e86\u8fd9\u4e2a\u503c, \u662f\u56e0\u4e3a\u5728 OpenGL \u548c DirectX \u5e73\u53f0\u4e0aUV\u8d70\u5411\u4e0d\u4e00\u6837. OpenGL \u5e73\u53f0\uff0cU\u6c34\u5e73\u5411\u53f3\uff0cV\u5782\u76f4\u5411\u4e0a\u5373+y\\ DirectX \u5e73\u53f0\uff0cU\u6c34\u5e73\u5411\u53f3\uff0cV\u5782\u76f4\u5411\u4e0b\u5373-y\\ \u800cUnity\u9075\u5faa\u7684\u662f OpenGL \u89c4\u8303\uff0c\u5728\u5bfc\u5165\u6a21\u578b\u7684\u65f6\u5019uv\u8d70\u5411\u662f+y\uff0c\u6240\u4ee5\u5982\u679c\u5728windows\u4e0aUnity\u7528 DirectX \u7684\u60c5\u51b5\u4e0b\uff0c\u53c9\u4e58\u5f97\u5230\u7684 B' \u521a\u597d\u53cd\u5411\u4e86\uff0c\u624b\u6027\u9519\u8bef\u3002\u6240\u4ee5Unity\u5b58\u50a8\u4e86\u4e00\u4e2a\u624b\u6027\u4fe1\u606f\u5728 tangent.w \u91cc\uff0c\u5728\u6b63\u4ea4\u5316\u6700\u540e\u5f97\u5230\u5207\u7ebf T' \u7684\u65f6\u5019\u8ba1\u7b97\u5f53\u524d\u5e73\u53f0\u7684\u624b\u6027\u503c\u5e76\u5b58\u5728 tangent.w \u4e2d\u3002 \u6240\u4ee5\u526f\u5207\u7ebf\u7684\u8ba1\u7b97\u65f6\u624d\u4f1a *sign","title":"\u6cd5\u7ebf\u7eb9\u7406"},{"location":"NormalMap/#_1","text":"\u6cd5\u7ebf\u8d34\u56fe\u8868\u793a\u7684\u662f\u5207\u7ebf\u7a7a\u95f4\u4e0b\u7684\u6cd5\u5411\u91cf, \u4efb\u4f55\u671d\u5411\u7684\u5e73\u9762\u90fd\u53ef\u4ee5\u9002\u7528\u540c\u4e00\u5957\u6cd5\u7ebf\u8d34\u56fe.","title":"\u6cd5\u7ebf\u8d34\u56fe"},{"location":"NormalMap/#_2","text":"","title":"\u4f7f\u7528"},{"location":"NormalMap/#_3","text":"\u9876\u70b9\u6570\u636e\u9664\u4e86 pos , texcoord , normal \u5916\u8fd8\u9700 Tangent \u6216 Bitangent .","title":"\u9876\u70b9\u6570\u636e"},{"location":"NormalMap/#vs","text":"vs\u4e2d\u5efa\u7acbTBN\u77e9\u9635, \u7528\u4e8e\u5c06\u5207\u7ebf\u7a7a\u95f4\u7684\u6cd5\u7ebf\u8f6c\u5230\u4e16\u754c\u7a7a\u95f4\u4fbf\u4e8e\u540e\u7eed\u5149\u7167\u8ba1\u7b97 // \u5c06\u5207\u7ebf\u4ece\u6a21\u578b\u7a7a\u95f4\u8f6c\u5230\u4e16\u754c\u7a7a\u95f4 half4 tangentWorld = half4(UnityObjectToWorldDir(v.tangent.xyz), v.tangent.w); half3x3 tangentToWorld = CreateTangentToWorldPerVertex(normalWorld, tangentWorld.xyz, tangentWorld.w); // Unity\u6784\u5efaTBN\u77e9\u9635\u7684\u51fd\u6570 half3x3 CreateTangentToWorldPerVertex(half3 normal, half3 tangent, half tangentSign) { // For odd-negative scale transforms we need to flip the sign half sign = tangentSign * unity_WorldTransformParams.w; half3 binormal = cross(normal, tangent) * sign; return half3x3(tangent, binormal, normal); }","title":"VS"},{"location":"NormalMap/#fragment","text":"half3 normalTangent = UnpackScaleNormal(tex2D (_BumpMap, texcoords.xy), _BumpScale); UnpackNormal \u91c7\u6837\u51fa\u6765\u7684\u5207\u7ebf\u7a7a\u95f4\u6cd5\u5411\u91cf, \u5c06 [0, 1] \u7a7a\u95f4\u8f6c\u6362\u56de [-1, 1] , DXT5nm \u538b\u7f29\u7684\u6cd5\u7ebf\u8d34\u56fe\u53ea\u4f1a\u5b58\u50a8 xy \u503c\u6240\u4ee5\u9700\u8981\u7b97\u51fa z // Unpack normal as DXT5nm (1, y, 1, x) or BC5 (x, y, 0, 1) // Note neutral texture like \"bump\" is (0, 0, 1, 1) to work with both plain RGB normal and DXT5nm/BC5 fixed3 UnpackNormalmapRGorAG(fixed4 packednormal) { // This do the trick packednormal.x *= packednormal.w; fixed3 normal; normal.xy = packednormal.xy * 2 - 1; normal.z = sqrt(1 - saturate(dot(normal.xy, normal.xy))); return normal; } inline fixed3 UnpackNormal(fixed4 packednormal) { #if defined(UNITY_NO_DXT5nm) return packednormal.xyz * 2 - 1; #else return UnpackNormalmapRGorAG(packednormal); #endif } \u6700\u540e\u5c06 normalTangent \u8f6c\u6362\u5230\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u518d\u5f52\u4e00\u5316\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86 half3 normalWorld = normalize(mul(normalTangent, tangentToWorld));","title":"Fragment"},{"location":"NormalMap/#_4","text":"odd-negative scaling : \u5947\u6570\u8f74\u8d1f\u7f29\u653e, xyz\u4e2d\u67091\u62163\u4e2a\u8f74\u7684\u7f29\u653e\u503c\u4e3a\u8d1f. \u5177\u6709 odd-negative scaling \u548c\u6ca1\u6709\u7684\u7269\u4f53\u6e32\u67d3\u72b6\u6001\u4e0d\u540c, \u56e0\u6b64\u4e5f\u4e0d\u80fd\u52a8\u6001\u5408\u6279\\ \u5728Unity\u4e2d vertex.tangent.w = 1 \u6216 -1 \u4e4b\u6240\u4ee5\u52a0\u4e86\u8fd9\u4e2a\u503c, \u662f\u56e0\u4e3a\u5728 OpenGL \u548c DirectX \u5e73\u53f0\u4e0aUV\u8d70\u5411\u4e0d\u4e00\u6837. OpenGL \u5e73\u53f0\uff0cU\u6c34\u5e73\u5411\u53f3\uff0cV\u5782\u76f4\u5411\u4e0a\u5373+y\\ DirectX \u5e73\u53f0\uff0cU\u6c34\u5e73\u5411\u53f3\uff0cV\u5782\u76f4\u5411\u4e0b\u5373-y\\ \u800cUnity\u9075\u5faa\u7684\u662f OpenGL \u89c4\u8303\uff0c\u5728\u5bfc\u5165\u6a21\u578b\u7684\u65f6\u5019uv\u8d70\u5411\u662f+y\uff0c\u6240\u4ee5\u5982\u679c\u5728windows\u4e0aUnity\u7528 DirectX \u7684\u60c5\u51b5\u4e0b\uff0c\u53c9\u4e58\u5f97\u5230\u7684 B' \u521a\u597d\u53cd\u5411\u4e86\uff0c\u624b\u6027\u9519\u8bef\u3002\u6240\u4ee5Unity\u5b58\u50a8\u4e86\u4e00\u4e2a\u624b\u6027\u4fe1\u606f\u5728 tangent.w \u91cc\uff0c\u5728\u6b63\u4ea4\u5316\u6700\u540e\u5f97\u5230\u5207\u7ebf T' \u7684\u65f6\u5019\u8ba1\u7b97\u5f53\u524d\u5e73\u53f0\u7684\u624b\u6027\u503c\u5e76\u5b58\u5728 tangent.w \u4e2d\u3002 \u6240\u4ee5\u526f\u5207\u7ebf\u7684\u8ba1\u7b97\u65f6\u624d\u4f1a *sign","title":"\u8865\u5145"}]}